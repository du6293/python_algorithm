##메모리 초과
from itertools import combinations
n,k = map(int,input().split() ) # 물품의 수, 버틸 수 있는 무게

basket = [] #무게, 가치
bag = []
for i in range(n):
    w,v = list(map(int,input().split()))
    bag.append([w,v])
    

res = []
for i in range(1,len(bag)+1):
    for combi in combinations(bag, i):
        basket.append(list(combi))

for i in range(len(basket)):
    s = 0
    m = 0
    for j in range(len(basket[i])):
        s += basket[i][j][0]
        m += basket[i][j][1]
    if s <= k:
        res.append([s,m])
res.sort(key =  lambda x:(-x[0]))

answer = res[0][1]
print(answer)

#정답
import sys

N, K = map(int, input().split())
stuff = [[0,0]]
knapsack = [[0 for _ in range(K + 1)] for _ in range(N + 1)]

for _ in range(N):
    stuff.append(list(map(int, input().split())))


#냅색 문제 풀이
for i in range(1, N + 1):
    for j in range(1, K + 1):
        weight = stuff[i][0] 
        value = stuff[i][1]
       
        if j < weight:
            knapsack[i][j] = knapsack[i - 1][j] #weight보다 작으면 위의 값을 그대로 가져온다
        else:
            knapsack[i][j] = max(value + knapsack[i - 1][j - weight], knapsack[i - 1][j])

print(knapsack[N][K])
