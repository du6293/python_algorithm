from collections import deque
n,m = map(int,input().split())  # 열,행

maps = []
for _ in range(m):
    line = list(input())
    maps.append(line)

w_visited = [[False] * (n) for _ in range(m)]
b_visited = [[False] * (n) for _ in range(m)]
w_queue = deque()
b_queue = deque()
w = []  # 영향력 담을 리스트
b = []
dx = [-1,1,0,0]
dy = [0,0,-1,1]


def bfs(queue,visited,a):
    cnt = 1
    while queue:
        x,y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx <m and 0<=ny<n and maps[nx][ny] == a:
                if visited[nx][ny] == False:
                    visited[nx][ny] = visited[x][y] + 1
                    queue.append([nx,ny])
                    maps[nx][ny] = 0
                    cnt += 1
    return cnt

def sq(s):
    total = 0
    for i in s:
        total += i**2
    return total

for i in range(m):
    for j in range(n):
        if maps[i][j] == 'W':
            w_visited[i][j] = True
            w_queue.append([i,j])
            w.append(bfs(w_queue,w_visited,'W'))
            maps[i][j] = 0
        elif maps[i][j] == 'B':
            b_visited[i][j] = True
            b_queue.append([i,j])
            b.append(bfs(b_queue,b_visited,'B'))
            maps[i][j] = 0
print(sq(w),sq(b))

