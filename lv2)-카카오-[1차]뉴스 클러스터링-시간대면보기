# 방법1
def solution(str1, str2):
    set1 = [str1[i:i+2].lower() for i in range(len(str1) - 1) if str1[i:i+2].lower().isalpha()]
    set2 = [str2[i:i+2].lower() for i in range(len(str2) - 1) if str2[i:i+2].lower().isalpha()]

    uu = sum([min(set1.count(u), set2.count(u)) for u in list(set(set1) & set(set2))])
    nn = sum([max(set1.count(n), set2.count(n)) for n in list(set(set1) | set(set2))])

    if nn == 0 and uu == 0:
        return 65536
    return int(float(uu)/float(nn) * 65536)
    
    
    
    
    
    ##방법2
    from collections import Counter
def solution(str1, str2):
    # make sets
    s1 = [str1[i:i+2].lower() for i in range(len(str1)-1) if str1[i:i+2].isalpha()]
    s2 = [str2[i:i+2].lower() for i in range(len(str2)-1) if str2[i:i+2].isalpha()]
    if not s1 and not s2:
        return 65536
    c1 = Counter(s1)
    c2 = Counter(s2)
    answer = int(float(sum((c1&c2).values()))/float(sum((c1|c2).values())) * 65536)
    return answer
