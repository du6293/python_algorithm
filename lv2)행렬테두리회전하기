## 내풀이
# 테두리 회전
def rotate(graph, s):
    x1,y1,x2,y2 = s[0],s[1],s[2],s[3]
    u,b = graph[x1-1][y1-1:y2-1],graph[x2-1][y1:y2]
    l,r = [],[]
    for i in range(x1,x2):
        l.append(graph[i][y1-1])
    for i in range(x1-1,x2-1):
        r.append(graph[i][y2-1])
    # 배열 갱신
    graph[x1-1][y1:y2] = u
    graph[x2-1][y1-1:y2-1] = b
    for i in range(len(l)):
        # x1-1~x2-1
        graph[x1-1+i][y1-1] = l[i]
    for i in range(len(r)):  # x1~x2
        graph[x1+i][y2-1] = r[i]
    
    # 새로운 graph에서 최솟값 찾기 
    nl,nr = [],[]
    for i in range(x1,x2):
        nl.append(graph[i][y1-1])
    for i in range(x1-1,x2-1):
        nr.append(graph[i][y2-1])
    n = graph[x1-1][y1-1:y2-1]+graph[x2-1][y1:y2]+nl+nr
    return min(n)

def solution(rows, columns, queries):
    answer = []
    board = [[i+columns*j for i in range(1,columns+1)] for j in range(0,rows)]
    for i in range(len(queries)):
        answer.append(rotate(board,queries[i]))
    return answer





from copy import copy

def solution(rows, columns, queries):
    answer = []
    array =[[0 for col in range(columns)] for row in range(rows)]
    t = 1
    #array생성
    for row in range(rows):
        for col in range(columns):
            array [row][col] = t
            t+= 1
    #쿼리값 변경
    for i in range(len(queries)):
        for j in range(len(queries[i])):
            queries[i][j] = queries[i][j]-1
            
            
    answer = []
    for x1,y1,x2,y2 in queries:
        r = copy(array[x1][y1:y2])
        l = copy(array[x2][y1+1:y2+1])
        u = []
        for i in range(x1+1,x2+1):
            u.append(array[i][y1])
        d = []
        for i in range(x1,x2):
            d.append(array[i][y2])
        
        answer.append(min(r+l+u+d))

   
        for i,j in zip(range(y1+1,y2+1),r):
            array[x1][i] = j

        for i,j in zip(range(y1,y2),l):
            array[x2][i] = j

        for i,j in zip(range(x1,x2),u):
            array[i][y1] = j

        for i,j in zip(range(x1+1,x2+1),d):
            array[i][y2] = j

    
    return answer
